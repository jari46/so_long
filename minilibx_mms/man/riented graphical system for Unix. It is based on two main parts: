MiniLibX(3)                                                                                      MiniLibX(3)



NNAAMMEE
       MiniLibX - Simple Window Interface Library for students

SSYYNNOOPPSSYYSS
       #include <mlx.h>

       _v_o_i_d _*
       mmllxx__iinniitt ();


DDEESSCCRRIIPPTTIIOONN
       MiniLibX  is an easy way to create graphical software, without any X-Window/X11 programming knowledge
       under Unix/Linux, nor any AppKit programming knowledge under MacOS. It provides  simple  window  cre-
       ation, a drawing tool, image and basic events management.


UUnniixx//LLiinnuuxx:: XX--WWIINNDDOOWW CCOONNCCEEPPTT
       X-Window is a network-oriented graphical system for Unix.  It is based on two main parts:
       On one side, your software wants to draw something on the screen and/or get keyboard & mouse entries.
       On the other side, the X-Server manages the screen, keyboard and mouse (It is often refered to  as  a
       "display").
       A  network connection must be established between these two entities to send drawing orders (from the
       software to the X-Server), and keyboard/mouse events (from the X-Server to the software).
       Nowadays, most of the time, both run on the same computer.


MMaaccOOSS:: WWIINNDDOOWW SSEERRVVEERR AANNDD GGPPUU
       Your software interacts directly with the Window server who handles the cohabitation  on  the  screen
       with other software and the event system, and interacts with the GPU to handle all drawing stuff.


IINNCCLLUUDDEE FFIILLEE
       mmllxx..hh  should  be  included  for a correct use of the MiniLibX API.  It only contains function proto-
       types, no structure is needed.


LLIIBBRRAARRYY FFUUNNCCTTIIOONNSS
       First of all, you need to initialize the connection between your software and the display.  Once this
       connection  is  established,  you'll  be able to use other MiniLibX functions to send and receive the
       messages from the display, like "I want to draw a yellow pixel in this window" or "did the user hit a
       key?".

       The  mmllxx__iinniitt  function  will  create this connection. No parameters are needed, ant it will return a
       _v_o_i_d _* identifier, used for further calls to the library routines.

       All other MiniLibX functions are described in the following man pages:


       mmllxx__nneeww__wwiinnddooww      : manage windows

       mmllxx__ppiixxeell__ppuutt       : draw inside window

       mmllxx__nneeww__iimmaaggee       : manipulate images

       mmllxx__lloooopp            : handle keyboard or mouse events


LLIINNKKIINNGG MMiinniiLLiibbXX
       To use MiniLibX functions, you may need to link your software with several libraries,  including  the
       MiniLibX library itself.  On Unix/Linux, simply add the following arguments at linking time:

       --llmmllxx --llXXeexxtt --llXX1111

       On MacOS, the dynamic Metal library will find on its own the missing components:

       --llmmllxx

       and still on MacOS, the static OpenGL version will need:

       --llmmllxx --ffrraammeewwoorrkk OOppeennGGLL --ffrraammeewwoorrkk AAppppKKiitt --llzz

       You may also need to specify the path to these libraries, using the --LL flag.



RREETTUURRNN VVAALLUUEESS
       If  mmllxx__iinniitt(())  fails  to set up the connection to the display, it will return NULL, otherwise a non-
       null pointer is returned as a connection identifier.


SSEEEE AALLSSOO
       mlx_new_window(3), mlx_pixel_put(3), mlx_new_image(3), mlx_loop(3)


AAUUTTHHOORR
       Copyright ol@ - 2002-2019 - Olivier Crouzet



                                             September 19, 2002                                  MiniLibX(3)
